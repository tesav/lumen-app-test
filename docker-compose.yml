version: '3'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./source/:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./source/:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #Postgres Service
  db:
    image: postgres
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: test_app
      POSTGRES_USER: app
      POSTGRES_PASSWORD: admin
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./postgresql/postgresql.conf:/usr/share/postgresql/postgresql.conf
      #- ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
    networks:
      - app-network

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      depends_on: db
    ports:
      - "8000:80"
    networks:
      - app-network

  #  url http://localhost:8025
  mailhog:
    image: mailhog/mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  db-data:
    driver: local
